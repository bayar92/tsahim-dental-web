{"mappings":"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","sources":["packages/devkit/src/index.ts","packages/devkit/src/generator/helpers.ts","packages/devkit/src/generator/migrations.ts","packages/devkit/src/utils/exec.ts","packages/devkit/src/utils/logger.ts","packages/devkit/src/generator/prompts.ts","packages/devkit/src/utils/error.ts","packages/devkit/src/generator/types.ts","packages/devkit/src/transforms/prettier.ts","packages/devkit/src/transforms/ejs.ts","packages/devkit/src/transforms/ts/jscodeshift.ts","packages/devkit/src/transforms/ts/add-import.ts","packages/devkit/src/transforms/ts/find-module-exports-expressions.ts","packages/devkit/src/transforms/prisma/add-prisma-enum.ts","packages/devkit/src/transforms/prisma/produce-schema.ts","packages/devkit/src/transforms/prisma/add-prisma-field.ts","packages/devkit/src/transforms/prisma/add-prisma-generator.ts","packages/devkit/src/transforms/prisma/add-prisma-model-attribute.ts","packages/devkit/src/transforms/prisma/add-prisma-model.ts","packages/devkit/src/transforms/prisma/set-prisma-data-source.ts","packages/devkit/src/transforms/prisma/log-schema.ts","packages/devkit/src/utils/fs.ts","packages/devkit/src/utils/notify-updates.ts"],"sourcesContent":["export * from \"./generator/helpers\";\nexport * from \"./generator/migrations\";\nexport * from \"./generator/prompts\";\nexport * from \"./generator/types\";\n\nexport * from \"./transforms/prettier\";\nexport * from \"./transforms/ejs\";\n\nexport * from \"./transforms/ts/jscodeshift\";\nexport * from \"./transforms/ts/add-import\";\nexport * from \"./transforms/ts/find-module-exports-expressions\";\n\nexport * from \"./transforms/prisma/add-prisma-enum\";\nexport * from \"./transforms/prisma/add-prisma-field\";\nexport * from \"./transforms/prisma/add-prisma-generator\";\nexport * from \"./transforms/prisma/add-prisma-model-attribute\";\nexport * from \"./transforms/prisma/add-prisma-model\";\nexport * from \"./transforms/prisma/produce-schema\";\nexport * from \"./transforms/prisma/set-prisma-data-source\";\nexport * from \"./transforms/prisma/log-schema\";\n\nexport * from \"./utils/error\";\nexport * from \"./utils/exec\";\nexport * from \"./utils/fs\";\nexport * from \"./utils/logger\";\nexport * from \"./utils/notify-updates\";\n","import { Package, ScaffoldPath } from \"../generator/types\";\n\nexport type Filter<T> = (context: T) => boolean;\n\nconst filterList = <T>(list: { filters?: Filter<T>[] }[], context: T) => {\n  return list.filter(({ filters }) => {\n    if (filters) return filters.every((filter) => filter(context));\n    return true;\n  });\n};\n\nexport const filterDependencies = <T>(\n  dependencies: (Package & { filters?: Filter<T>[] })[],\n  context: T\n) => {\n  return filterList(dependencies, context) as unknown as Package[];\n};\n\nexport const filterTemplates = <T>(\n  templates: (ScaffoldPath & { filters?: Filter<T>[] })[],\n  context: T\n) => {\n  return filterList(templates, context) as unknown as ScaffoldPath[];\n};\n","import { exec, sleep } from \"../utils/exec\";\nimport { logger } from \"../utils/logger\";\n\nexport const startDocker = async () => {\n  console.log(\"Starting docker instance\");\n  await exec(\"docker-compose\", [\"up\", \"-d\"]);\n};\n\nexport const stopDocker = async () => {\n  console.log(\"Stopping docker instance\");\n  await exec(\"docker-compose\", [\"down\"]);\n};\n\nexport const runMigrations = async (name = \"\") => {\n  console.log(\"Running local migrations\");\n  await exec(\"npm\", [\n    \"run\",\n    \"prisma:migrate:dev\",\n    \"--\",\n    \"-n\",\n    name,\n    \"--skip-seed\",\n  ]);\n};\n\nexport const runPrismaCodegen = async () => {\n  console.log(\"Running prisma codegen\");\n  await exec(\"npm\", [\"run\", \"prisma:generate\"]);\n};\n\nexport const syncGeneratorMigrations = async (migrationName: string) => {\n  try {\n    await startDocker();\n    await sleep(2000);\n    await runMigrations(migrationName);\n  } catch (error: any) {\n    logger.error(`Failed to run migrations: ${error.command}`);\n    logger.newLine();\n    logger.warning(\n      \"You can manually run migrations with the following commands:\"\n    );\n    logger.list([\n      `npm run docker:start - ${logger.withMeta(\n        \"starts a local docker instance with your database\"\n      )}`,\n      `npm run prisma:migrate:dev - ${logger.withMeta(\"runs db migrations\")}`,\n    ]);\n    logger.newLine();\n  }\n};\n","import spawn from \"cross-spawn\";\n\nexport const execSync = (\n  command: string,\n  args: string[],\n  options: any = {}\n) => {\n  return spawn.sync(command, args, options);\n};\n\nexport const exec = (\n  command: string,\n  args: string[],\n  withStdio: boolean = true\n) =>\n  new Promise<void>((resolve, reject) => {\n    const child = spawn(command, args, {\n      stdio: withStdio ? \"inherit\" : \"ignore\",\n      env: {\n        ...process.env,\n        ADBLOCK: \"1\",\n        DISABLE_OPENCOLLECTIVE: \"1\",\n        TS_NODE_COMPILER_OPTIONS: JSON.stringify({\n          module: \"commonjs\",\n        }),\n      },\n    });\n\n    child.on(\"close\", (code) => {\n      if (code !== 0) {\n        reject({ command: `${command} ${args.join(\" \")}` });\n        return;\n      }\n      resolve();\n    });\n  });\n\nexport const sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n","import c from \"chalk\";\nimport { Table } from \"console-table-printer\";\nimport ora from \"ora\";\nimport readline from \"readline\";\n\nexport const table = Table;\nexport const chalk = c;\n\nexport const logger = {\n  withWarning(str: string) {\n    return `⚠️  ${c.yellow(str)}`;\n  },\n  withCaret(str: string) {\n    return `${c.gray(\">\")} ${str}`;\n  },\n  withCheck(str: string) {\n    return `${c.green(\"✔\")} ${str}`;\n  },\n  withX(str: string) {\n    return `${c.red.bold(\"✕\")} ${str}`;\n  },\n  withProgress(str: string) {\n    return logger.withCaret(str);\n  },\n  withError(str: string) {\n    return logger.withX(c.red.bold(str));\n  },\n  withMeta(str: string) {\n    return c.dim(str);\n  },\n  withVariable(str: string) {\n    return c.green(`${str}`);\n  },\n  withCommand(str: string) {\n    return c.cyan(`${str}`);\n  },\n  withIndent(str: string, indent = 0) {\n    const indents = \"   \".repeat(indent);\n    return `${indents}${str}`;\n  },\n  spinner(str?: string) {\n    const spinner = ora({\n      text: str,\n      color: \"cyan\",\n      spinner: \"dots\",\n    });\n    if (str) spinner.start();\n    return spinner;\n  },\n  clearLine(msg?: string) {\n    readline.clearLine(process.stdout, 0);\n    readline.cursorTo(process.stdout, 0);\n    msg && process.stdout.write(msg);\n  },\n  clearConsole() {\n    if (process.platform === \"win32\") {\n      process.stdout.write(\"\\x1B[2J\\x1B[0f\");\n    } else {\n      process.stdout.write(\"\\x1B[2J\\x1B[3J\\x1B[H\");\n    }\n  },\n  title(msg: string) {\n    console.log(c.bold(msg));\n  },\n  list(msgs: string[]) {\n    console.log(msgs.map((m) => logger.withCaret(m)).join(\"\\n\"));\n  },\n  error(msg: string) {\n    console.error(logger.withX(c.red.bold(msg)));\n  },\n  warning(msg: string) {\n    console.log(logger.withWarning(msg));\n  },\n  meta(msg: string) {\n    console.log(logger.withMeta(msg));\n  },\n  progress(msg: string) {\n    console.log(logger.withCaret(msg));\n  },\n  success(msg: string) {\n    console.log(logger.withCheck(msg));\n  },\n  log(msg: string, indents = 0, newLine = false) {\n    console.log(logger.withIndent(msg, indents));\n    if (newLine) console.log();\n  },\n  newLine() {\n    console.log();\n  },\n  table,\n};\n","import p from \"prompts\";\nimport { throwHandledError } from \"../utils/error\";\n\nexport const prompts = <T extends string = string>(\n  questions: p.PromptObject<T> | Array<p.PromptObject<T>>,\n  options?: p.Options\n) => {\n  return p(questions, {\n    ...options,\n    onCancel: () => {\n      throwHandledError({\n        command: \"prompt\",\n        message: \"Cancelled by user\",\n      });\n    },\n  });\n};\n","export const throwHandledError = ({\n  command,\n  message,\n  error,\n}: {\n  command: string;\n  message: string;\n  error?: any;\n}) => {\n  if (error) console.error(error);\n  throw {\n    command,\n    message,\n  };\n};\n\nexport const onPromptCancel = () => {\n  throwHandledError({\n    command: \"prompt\",\n    message: \"User cancelled step\",\n  });\n};\n","export type Package = {\n  name: string;\n  version?: string;\n  isDevDep?: boolean;\n  isExpoDep?: boolean;\n};\n\nexport type ScaffoldPath = {\n  src: string;\n  dest: string;\n};\n\nexport type Frameworks = \"next\" | \"expo\" | \"bedrock\" | \"remix\" | \"blitz\";\nexport type Language = \"typescript\" | \"javascript\";\nexport type Theme = \"pico\";\n\nexport type Context<T = {}> = {\n  props: T;\n  paths: {\n    root: string;\n    env: string;\n    envExample: string;\n    fxConfig: string;\n    tsConfig: string;\n    packageJson: string;\n    scheme: string;\n    lib: string;\n    libCore: string;\n    mobile: string;\n    appJson: string;\n    pages: string;\n    api: string;\n  };\n  config: {\n    frameworks: Frameworks[];\n    language: Language;\n    theme: Theme;\n  };\n  helpers: Record<string, any>;\n  generatorMeta?: GeneratorMeta;\n  // alias\n  h: Record<string, any>;\n  p: T;\n};\n\nexport type Generator<T = any> = {\n  name?: string;\n  description?: string;\n  version?: number;\n  setup: (\n    context: Context,\n    generatorOptions?: Record<string, any>\n  ) => Promise<T>;\n  install: (context: Context<T>) => Promise<Package[]>;\n  scaffold: (context: Context<T>) => Promise<ScaffoldPath[]>;\n  codemods: (context: Context<T>) => Promise<string[]>;\n  finish: (context: Context<T>) => Promise<void>;\n  uninstall: (context: Context<T>) => Promise<{\n    dependencies: string[];\n    templates: string[];\n  }>;\n};\n\nexport enum GeneratorLocation {\n  Local,\n  Remote,\n}\n\nexport type GeneratorMeta = {\n  feature: string;\n  path: string;\n  subdirectory?: string;\n  localRootPath: string;\n  localPackageJsonPath: string;\n  location: GeneratorLocation;\n};\n","import prettier from \"prettier\";\n\nexport const filetypeToPrettierParser = {\n  ts: \"typescript\",\n  tsx: \"typescript\",\n  js: \"babel\",\n  jsx: \"babel\",\n  json: \"json\",\n  yml: \"yaml\",\n  yaml: \"yaml\",\n  md: \"markdown\",\n  html: \"html\",\n  css: \"css\",\n  scss: \"scss\",\n  sass: \"sass\",\n  less: \"less\",\n  graphql: \"graphql\",\n};\n\nexport const getPrettierParser = (filePath: string) => {\n  const filetype = filePath.slice(\n    filePath.lastIndexOf(\".\") + 1\n  ) as keyof typeof filetypeToPrettierParser;\n  return filetypeToPrettierParser[filetype] || null;\n};\n\nexport const transformPrettier =\n  (filePath: string) => async (source: string) => {\n    const parser = getPrettierParser(filePath);\n    if (parser) return prettier.format(source, { parser });\n    return source;\n  };\n","import ejs from \"ejs\";\n\nexport const transformEjs = async (source: string, context: any) => {\n  return ejs.render(source, context);\n};\n","import jscodeshift from \"jscodeshift\";\n\nexport const createJscodeshiftProgram = (source: string) => {\n  const j = jscodeshift.withParser(\"tsx\");\n  return { program: j(source), jscodeshift, j };\n};\n\nexport const createJscodeshiftTransform =\n  (transform: any) => async (source: string, context: any) => {\n    let { program } = createJscodeshiftProgram(source);\n    program = await transform(program, context);\n    return program.toSource();\n  };\n","import j from \"jscodeshift\";\nimport { Collection } from \"jscodeshift/src/Collection\";\n\nexport const addImport = (\n  program: Collection<j.Program>,\n  importToAdd: j.ImportDeclaration\n) => {\n  const importStatementCount = program.find(j.ImportDeclaration).length;\n\n  if (importStatementCount === 0) {\n    program.find(j.Statement).at(0).insertBefore(importToAdd);\n    return program;\n  }\n\n  try {\n    program.find(j.ImportDeclaration).forEach((stmt, idx) => {\n      const importValue = stmt.value.source.value;\n      if (importToAdd.source.value === importValue) {\n        console.error(\n          `Skipping addImport, duplicate import found: ${importValue}`\n        );\n        throw new Error();\n      } else {\n        if (idx === importStatementCount - 1) {\n          stmt.replace(stmt.node, importToAdd);\n        }\n      }\n    });\n  } catch (e) {}\n\n  return program;\n};\n","import j from \"jscodeshift\";\nimport { Collection } from \"jscodeshift/src/Collection\";\n\nexport const findModuleExportsExpressions = (program: Collection<j.Program>) =>\n  program.find(j.AssignmentExpression).filter((path) => {\n    const { left, right } = path.value;\n    return (\n      left.type === \"MemberExpression\" &&\n      left.object.type === \"Identifier\" &&\n      left.property.type === \"Identifier\" &&\n      left.property.name === \"exports\" &&\n      right.type === \"ObjectExpression\"\n    );\n  });\n","import { Enum } from \"@mrleebo/prisma-ast\";\nimport { produceSchema } from \"./produce-schema\";\n\n/**\n * Adds an enum to your schema.prisma data model.\n *\n * @param source - schema.prisma source file contents\n * @param enumProps - the enum to add\n * @returns The modified schema.prisma source\n * @example Usage\n * ```\n *  addPrismaEnum(source, {\n      type: \"enum\",\n      name: \"Role\",\n      enumerators: [\n        {type: \"enumerator\", name: \"USER\"},\n        {type: \"enumerator\", name: \"ADMIN\"},\n      ],\n    })\n * ```\n */\nexport const addPrismaEnum = (source: string, enumProps: Enum) =>\n  produceSchema(source, (schema) => {\n    const existing = schema.list.find(\n      (x) => x.type === \"enum\" && x.name === enumProps.name\n    );\n    existing ? Object.assign(existing, enumProps) : schema.list.push(enumProps);\n  });\n","import { getSchema, printSchema, Schema } from \"@mrleebo/prisma-ast\";\n\n/**\n * A file transformer that parses a schema.prisma string, offers you a callback\n * of the parsed document object, then takes your changes to the document and\n * writes out a new schema.prisma string with the changes applied.\n *\n * @param source - schema.prisma source file contents\n * @param producer - a callback function that can mutate the parsed data model\n * @returns The modified schema.prisma source\n */\nexport const produceSchema = async (\n  source: string,\n  producer: (schema: Schema) => void\n) => {\n  const schema = await getSchema(source);\n  producer(schema);\n  return printSchema(schema);\n};\n","import { Field, Model } from \"@mrleebo/prisma-ast\";\nimport { produceSchema } from \"./produce-schema\";\n\n/**\n * Adds a field to a model in your schema.prisma data model.\n *\n * @param source - schema.prisma source file contents\n * @param modelName - name of the model to add a field to\n * @param fieldProps - the field to add\n * @returns The modified schema.prisma source\n * @example Usage\n * ```\n *  addPrismaField(source, \"Project\", {\n      type: \"field\",\n      name: \"name\",\n      fieldType: \"String\",\n      optional: false,\n      attributes: [{type: \"attribute\", kind: \"field\", name: \"unique\"}],\n    })\n * ```\n */\nexport const addPrismaField = (\n  source: string,\n  modelName: string,\n  fieldProps: Field\n) =>\n  produceSchema(source, (schema) => {\n    const model = schema.list.find(\n      (x) => x.type === \"model\" && x.name === modelName\n    ) as Model;\n    if (!model) return;\n\n    const existing = model.properties.find(\n      (x) => x.type === \"field\" && x.name === fieldProps.name\n    );\n    existing\n      ? Object.assign(existing, fieldProps)\n      : model.properties.push(fieldProps);\n  });\n","import { Generator } from \"@mrleebo/prisma-ast\";\nimport { produceSchema } from \"./produce-schema\";\n\n/**\n * Adds a generator to your schema.prisma data model.\n *\n * @param source - schema.prisma source file contents\n * @param generatorProps - the generator to add\n * @returns The modified schema.prisma source\n * @example Usage\n * ```\n *  addPrismaGenerator(source, {\n      type: \"generator\",\n      name: \"nexusPrisma\",\n      assignments: [{type: \"assignment\", key: \"provider\", value: '\"nexus-prisma\"'}],\n    })\n * ```\n */\nexport const addPrismaGenerator = (source: string, generatorProps: Generator) =>\n  produceSchema(source, (schema) => {\n    const existing = schema.list.find(\n      (x) => x.type === \"generator\" && x.name === generatorProps.name\n    ) as Generator;\n    existing\n      ? Object.assign(existing, generatorProps)\n      : schema.list.push(generatorProps);\n  });\n","import { Model, ModelAttribute } from \"@mrleebo/prisma-ast\";\nimport { produceSchema } from \"./produce-schema\";\n\n/**\n * Adds a field to a model in your schema.prisma data model.\n *\n * @remarks Not ready for actual use\n * @param source - schema.prisma source file contents\n * @param modelName - name of the model to add a field to\n * @param attributeProps - the model attribute (such as an index) to add\n * @returns The modified schema.prisma source\n * @example Usage\n * ```\n * addPrismaModelAttribute(source, \"Project\", {\n *   type: \"attribute\",\n *   kind: \"model\",\n *   name: \"index\",\n *   args: [{ type: \"attributeArgument\", value: { type: \"array\", args: [\"name\"] } }]\n * });\n * ```\n */\nexport const addPrismaModelAttribute = (\n  source: string,\n  modelName: string,\n  attributeProps: ModelAttribute\n) =>\n  produceSchema(source, (schema) => {\n    const model = schema.list.find(\n      (x) => x.type === \"model\" && x.name === modelName\n    ) as Model;\n    if (!model) return;\n\n    const existing = model.properties.find(\n      (x) => x.type === \"attribute\" && x.name === attributeProps.name\n    );\n\n    existing\n      ? Object.assign(existing, attributeProps)\n      : model.properties.push(attributeProps);\n  });\n","import { Model } from \"@mrleebo/prisma-ast\";\nimport { produceSchema } from \"./produce-schema\";\n\n/**\n * Adds an enum to your schema.prisma data model.\n *\n * @param source - schema.prisma source file contents\n * @param modelProps - the model to add\n * @returns The modified schema.prisma source\n * @example Usage\n * ```\n *  addPrismaModel(source, {\n      type: \"model\",\n      name: \"Project\",\n      properties: [{type: \"field\", name: \"id\", fieldType: \"String\"}],\n    })\n * ```\n */\nexport const addPrismaModel = (source: string, modelProps: Model) =>\n  produceSchema(source, (schema) => {\n    const existing = schema.list.find(\n      (x) => x.type === \"model\" && x.name === modelProps.name\n    );\n    existing\n      ? Object.assign(existing, modelProps)\n      : schema.list.push(modelProps);\n  });\n","import { Datasource } from \"@mrleebo/prisma-ast\";\nimport { produceSchema } from \"./produce-schema\";\n\n/**\n * Modify the prisma datasource metadata to use the provider and url specified.\n *\n * @param source - schema.prisma source file contents\n * @param datasourceProps - datasource object to assign to the schema\n * @returns The modified schema.prisma source\n * @example Usage\n * ```\n *  setPrismaDataSource(source, {\n      type: \"datasource\",\n      name: \"db\",\n      assignments: [\n        {type: \"assignment\", key: \"provider\", value: '\"postgresql\"'},\n        {\n          type: \"assignment\",\n          key: \"url\",\n          value: {type: \"function\", name: \"env\", params: ['\"DATABASE_URL\"']},\n        },\n      ],\n    })\n * ```\n */\nexport const setPrismaDataSource = (\n  source: string,\n  datasourceProps: Datasource\n) =>\n  produceSchema(source, (schema) => {\n    const existing = schema.list.find((x) => x.type === \"datasource\");\n    existing\n      ? Object.assign(existing, datasourceProps)\n      : schema.list.push(datasourceProps);\n  });\n","import fs from \"fs-extra\";\nimport { getSchema } from \"@mrleebo/prisma-ast\";\n\nexport const logSchema = async (source: string) => {\n  const schema = await getSchema(source);\n  const printPath = `${process.cwd()}/schema.json`;\n  console.log(schema);\n  console.log(`written to ${printPath}`);\n  fs.writeFileSync(printPath, JSON.stringify(schema, null, 2));\n};\n","import fs from \"fs-extra\";\nimport globby from \"globby\";\nimport rimraf from \"rimraf\";\n\nexport const isWriteable = async (directory: string) => {\n  try {\n    await fs.promises.access(directory, (fs.constants || fs).W_OK);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const makeDir = (root: string, options = { recursive: true }) =>\n  fs.mkdirSync(root, options);\n\nexport const removeDir = (path: string) => rimraf.sync(path);\n\nexport const getFilePaths = (\n  patterns: string,\n  options?: globby.GlobbyOptions\n) => globby(patterns, options);\n\nexport const copyFiles = (source: string, destination: string) =>\n  fs.copy(source, destination);\n\nexport const fileExists = (path: string) => fs.existsSync(path);\n\nexport const readJson = (...args: Parameters<typeof fs.readJsonSync>) =>\n  fs.readJsonSync(...args);\n\nexport const writeJson = (...args: Parameters<typeof fs.writeJsonSync>) =>\n  fs.outputJSONSync(...args);\n\nexport const readFile = (filePath: string) => fs.readFileSync(filePath, \"utf8\");\n\nexport const writeFile = (\n  filePath: string,\n  content: string,\n  options: { force?: boolean; append?: boolean } = {\n    force: false,\n    append: false,\n  }\n) => {\n  const exists = fs.existsSync(filePath);\n  if (exists && options.append) {\n    return fs.appendFileSync(filePath, content);\n  }\n  if (!exists || (exists && options.force)) {\n    return fs.outputFileSync(filePath, content);\n  }\n  throw new Error(`Cannot write file to ${filePath}`);\n};\n\ntype Path = { src: string; dest?: string };\ntype Transform = (source: string, context: any) => Promise<string | void>;\n\nexport const runTransforms = async (\n  filePath: Path | string,\n  ...transforms: [Transform, any?][]\n) => {\n  const isStringPath = typeof filePath === \"string\";\n  const sourcePath = isStringPath ? filePath : filePath.src;\n  const destinationPath = isStringPath ? filePath : filePath.dest;\n  let source = fs.readFileSync(sourcePath, \"utf8\");\n\n  for (const [transform, context] of transforms) {\n    const transformed = await transform(source, context);\n    if (transformed) source = transformed;\n  }\n\n  if (destinationPath) {\n    return fs.outputFile(destinationPath, source);\n  }\n\n  return source;\n};\n","import checkForUpdate from \"update-check\";\nimport { logger } from \"./logger\";\n\nexport const checkAndNotifyUpdates = async (\n  packageJson: Record<string, any>\n) => {\n  try {\n    const res = await checkForUpdate(packageJson).catch(() => null);\n    if (res?.latest) {\n      logger.newLine();\n      logger.warning(`A new version of \"${packageJson.name}\" is available!`);\n      logger.log(\n        `You can update by running: ${logger.withVariable(\n          `npm update ${packageJson.name}`\n        )}`\n      );\n      logger.newLine();\n    }\n    process.exit();\n  } catch {\n    // ignore error\n  }\n};\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../../"}