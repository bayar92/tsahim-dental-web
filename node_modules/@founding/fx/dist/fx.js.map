{"mappings":"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","sources":["packages/fx/src/fx.ts","packages/fx/package.json","packages/fx/src/commands/init.ts","packages/fx/src/generator/extract.ts","packages/fx/src/utils/ts-transpiler.ts","packages/fx/src/utils/network.ts","packages/fx/src/utils/config.ts","packages/fx/src/utils/repo.ts","packages/fx/src/utils/package.ts","packages/fx/src/generator/execute.ts","packages/fx/src/generator/context.ts","packages/fx/src/commands/list.ts","packages/fx/src/generator/list.ts","packages/fx/src/commands/add.ts","packages/fx/src/utils/args.ts","packages/fx/src/commands/remove.ts","packages/fx/src/commands/preset.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { Command } from \"commander\";\nimport { logger, checkAndNotifyUpdates } from \"@founding/devkit\";\n\nimport packageJson from \"../package.json\";\nimport { init } from \"./commands/init\";\nimport { list } from \"./commands/list\";\nimport { add } from \"./commands/add\";\nimport { remove } from \"./commands/remove\";\nimport { preset } from \"./commands/preset\";\n\nconst program = new Command();\n\nconst main = async () => {\n  program\n    .version(packageJson.version)\n    .description(\n      \"CLI tool to add/remove prebuilt features to a Next.js project\"\n    )\n    .showSuggestionAfterError();\n\n  program\n    .command(\"init\")\n    .description(\"Converts a project to be compatible with FX features\")\n    .option(\n      \"-n, --dry-run\",\n      \"Print outputs of initializing without running the command\"\n    )\n    .option(\n      \"-p, --path <path>\",\n      \"Path to a custom generator to run for initializing\"\n    )\n    .allowUnknownOption()\n    .action(init);\n\n  program\n    .command(\"list\")\n    .description(\"List all available features to add\")\n    .allowUnknownOption()\n    .action(list);\n\n  program\n    .command(\"add\")\n    .description(\"Add a new feature to the project\")\n    .argument(\n      \"[feature]\",\n      logger.withMeta(`Your Feature to could be:\n- An official feature generator (e.g. auth)\n- Link to GitHub repository (e.g. \"foundinghq/example-generator\")\n- Full url of a Github repository (e.g. \"https://github.com/foundinghq/example-generator\")\n- A local generator path (e.g. \"./generators/example\")\n\nIf no feature is specified, the list of available features will be displayed.\\n`)\n    )\n    .argument(\n      \"[generatorProps...]\",\n      logger.withMeta(\n        `A list of properties to pass to the generator. These come in the form of key=value pairs.`\n      )\n    )\n    .option(\n      \"-n, --dry-run\",\n      \"Print outputs of adding a feature without running the command\"\n    )\n    .allowUnknownOption()\n    .action(add);\n\n  program\n    .command(\"remove\")\n    .description(\"Remove a feature from the project\")\n    .argument(\n      \"[feature]\",\n      logger.withMeta(\n        `A feature you've previously added to the project that you now want to revert. Reverting a feature will remove all files generated by the feature but will not undo codemod changes.`\n      )\n    )\n    .option(\n      \"-n, --dry-run\",\n      \"Print outputs of removing a feature without running the command\"\n    )\n    .allowUnknownOption()\n    .action(remove);\n\n  program\n    .command(\"preset\")\n    .description(\"Bootstrap a preset\")\n    .argument(\n      \"[preset]\",\n      logger.withMeta(\n        `Presets act as sharable set of features that can be used to quickly get a project up and running.`\n      )\n    )\n    .option(\n      \"-n, --dry-run\",\n      \"Print outputs of executing a preset without running the command\"\n    )\n    .allowUnknownOption()\n    .action(preset);\n\n  try {\n    await program.parseAsync(process.argv);\n    await checkAndNotifyUpdates(packageJson);\n  } catch (reason: any) {\n    logger.newLine();\n    if (reason.command) {\n      logger.error(`${logger.withCommand(reason.command)} command failed.`);\n      if (reason.message) logger.error(reason.message);\n    } else {\n      logger.error(\"Unexpected error. Please report it as a bug:\");\n      console.error(reason);\n    }\n\n    await checkAndNotifyUpdates(packageJson);\n\n    process.exit(1);\n  }\n};\n\nmain();\n","{\n  \"name\": \"@founding/fx\",\n  \"version\": \"0.0.15\",\n  \"keywords\": [],\n  \"description\": \"CLI to add prebuilt features to Fx apps\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/FoundingHQ/fx\",\n    \"directory\": \"packages/fx\"\n  },\n  \"author\": \"@FoundingHQ\",\n  \"license\": \"Apache-2.0\",\n  \"source\": \"./src/fx.ts\",\n  \"main\": \"./dist/fx.js\",\n  \"bin\": {\n    \"fx\": \"./dist/fx.js\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"cli\": \"ts-node src/fx.ts\",\n    \"cli:prod\": \"node dist/fx\",\n    \"dev\": \"parcel watch -p 1236\",\n    \"clean\": \"rimraf dist\",\n    \"prebuild\": \"npm run clean\",\n    \"build\": \"parcel build\",\n    \"prepublish\": \"npm run build\"\n  },\n  \"dependencies\": {\n    \"@founding/devkit\": \"^0.0.15\",\n    \"async-retry\": \"^1.3.3\",\n    \"change-case\": \"^4.1.2\",\n    \"commander\": \"^8.3.0\",\n    \"front-matter\": \"^4.0.2\",\n    \"got\": \"^11.8.3\",\n    \"inflection\": \"^1.13.1\",\n    \"tar\": \"^6.1.11\",\n    \"ts-node\": \"^10.4.0\",\n    \"typescript\": \"^4.5.4\"\n  },\n  \"devDependencies\": {\n    \"@types/async-retry\": \"^1.4.3\",\n    \"@types/inflection\": \"^1.13.0\",\n    \"@types/node\": \"^16.11.13\",\n    \"@types/tar\": \"^6.1.1\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"gitHead\": \"9648af05f7afcdfc7e04ad520ad76501203f7b70\"\n}\n","import {\n  GeneratorLocation,\n  removeDir,\n  logger,\n  throwHandledError,\n} from \"@founding/devkit\";\nimport { extractGenerator, normalizeGeneratorPath } from \"../generator/extract\";\nimport { executeGenerator } from \"../generator/execute\";\nimport { getFrameworks } from \"../generator/context\";\n\nexport const init = async (options: Record<string, any> = {}) => {\n  const spinner = logger.spinner(`Initializing FX for your project`);\n  const generatorMeta = normalizeGeneratorPath(options.path || \"init[dev]\");\n  const frameworks = getFrameworks();\n\n  if (frameworks.length === 0 || !frameworks.includes(\"next\")) {\n    throwHandledError({\n      command: \"init\",\n      message: `FX currently does not support the framework your project is running on`,\n    });\n  }\n\n  const { generator } = await extractGenerator(generatorMeta);\n  spinner.succeed(\n    `Framework${frameworks.length ? \"s\" : \"\"} detected: ${frameworks.join(\n      \", \"\n    )}`\n  );\n\n  logger.success(`Converting project to be FX compatible`);\n  logger.newLine();\n  await executeGenerator(generatorMeta, generator, {}, options);\n\n  if (generatorMeta.location === GeneratorLocation.Remote) {\n    removeDir(generatorMeta.localRootPath);\n  }\n\n  logger.success(\n    `${logger.withVariable(\n      \"Success!\"\n    )} Your project is now compatible with FX features`\n  );\n  logger.newLine();\n  logger.log(`You can add features to your project with:`);\n  logger.log(logger.withCommand(`npx fx add <feature>`), 1);\n  logger.newLine();\n};\n","import { join, resolve, dirname } from \"path\";\nimport {\n  Generator,\n  GeneratorMeta,\n  GeneratorLocation,\n  logger,\n  readJson,\n} from \"@founding/devkit\";\nimport { setupTsTranspiler } from \"../utils/ts-transpiler\";\nimport { gotJSON, isUrlValid } from \"../utils/network\";\nimport { GH_ROOT, API_ROOT, RAW_ROOT, cwd } from \"../utils/config\";\nimport { cloneRepo } from \"../utils/repo\";\nimport { install } from \"../utils/package\";\n\nexport const normalizeGeneratorPath = (feature: string) => {\n  // feature == `auth`\n  const isOfficialGenerator = /^([\\w\\-_\\[\\]]*)$/.test(feature);\n  // feature == `https://github.com/some-githubuser/my-awesome-generator`\n  const isUrlGenerator = feature.startsWith(GH_ROOT);\n  // feature == `some-githubuser/my-awesome-generator`\n  const isGitHubShorthandGenerator = /^([\\w-_]*)\\/([\\w-_]*)$/.test(feature);\n  if (isOfficialGenerator || isUrlGenerator || isGitHubShorthandGenerator) {\n    let repoUrl;\n    let subdirectory;\n    switch (true) {\n      case isUrlGenerator:\n        repoUrl = feature;\n        break;\n      case isOfficialGenerator:\n        repoUrl = `${GH_ROOT}/foundinghq/fx`;\n        subdirectory = `generators/${feature}`;\n        break;\n      case isGitHubShorthandGenerator:\n        repoUrl = `${GH_ROOT}/${feature}`;\n        break;\n      default:\n        throw new Error(\n          \"should be impossible, the 3 cases are the only way to get into this switch\"\n        );\n    }\n    return {\n      feature,\n      path: repoUrl,\n      subdirectory,\n      localRootPath: join(cwd, \".fx\"),\n      localPackageJsonPath: join(cwd, \".fx\", \"package.json\"),\n      location: GeneratorLocation.Remote,\n    };\n  } else {\n    // feature == `./my-awesome-generator.ts`\n    return {\n      feature,\n      path: feature,\n      localRootPath:\n        feature.endsWith(\".ts\") || feature.endsWith(\".js\")\n          ? dirname(feature)\n          : feature,\n      localPackageJsonPath: join(dirname(feature), \"package.json\"),\n      location: GeneratorLocation.Local,\n    };\n  }\n};\n\nconst skipDependencies: Record<string, boolean> = {\n  \"@founding/devkit\": true,\n};\n\nexport const extractGenerator = async (generatorMeta: GeneratorMeta) => {\n  // Since the generator may be a .ts file, we need to setup a tsnode runtime\n  setupTsTranspiler();\n\n  if (generatorMeta.location === GeneratorLocation.Remote) {\n    const apiUrl = generatorMeta.path.replace(GH_ROOT, API_ROOT);\n    const rawUrl = generatorMeta.path.replace(GH_ROOT, RAW_ROOT);\n    const repoInfo = await gotJSON(apiUrl);\n    const packageJsonPath = join(\n      `${rawUrl}`,\n      repoInfo.default_branch,\n      generatorMeta.subdirectory ?? \"\",\n      \"package.json\"\n    );\n\n    if (!(await isUrlValid(packageJsonPath))) {\n      logger.error(`Could not find generator for \"${generatorMeta.feature}\"\\n`);\n      logger.title(\"Please provide one of the following:\");\n      logger.log(`1. The name of a feature to install (e.g. \"auth\")`);\n      logger.meta(\n        \"- Available generators listed at https://github.com/foundinghq/fx/tree/main/generators\"\n      );\n      logger.log(\n        `2. The full name of a GitHub repository (e.g. \"foundinghq/example-generator\")`\n      );\n      logger.log(\n        `3. A full URL to a Github repository (e.g. \"https://github.com/foundinghq/example-generator\"), or`\n      );\n      logger.log(`4. A file path to a locally-written generator.`, 0, true);\n      process.exit(1);\n    } else {\n      const tempDir = generatorMeta.localRootPath;\n\n      await cloneRepo(\n        tempDir,\n        repoInfo.full_name,\n        repoInfo.default_branch,\n        generatorMeta.subdirectory\n      );\n\n      const generatorPackageJson = readJson(generatorMeta.localPackageJsonPath);\n\n      if (!generatorPackageJson.main) {\n        logger.error(\n          `Failed to run generator: package.json must have a \"main\" field that points to the generator module`\n        );\n        process.exit(1);\n      }\n\n      // Since the generator lives inside the project subdirectory (.fx folder),\n      // we only need to install dependencies that the project doesnt have.\n      if (\n        generatorPackageJson.dependencies ||\n        generatorPackageJson.devDependencies\n      ) {\n        const projectPackageJson = readJson(join(cwd, \"package.json\"));\n        const allProjectDependencies = [\n          ...Object.keys(projectPackageJson.dependencies || {}),\n          ...Object.keys(projectPackageJson.devDependencies || {}),\n        ];\n\n        const allGeneratorDependencies = [\n          ...Object.keys(generatorPackageJson.dependencies || {}),\n          ...Object.keys(generatorPackageJson.devDependencies || {}),\n        ];\n\n        const difference = allGeneratorDependencies\n          .filter((d) => !skipDependencies[d])\n          .filter((d) => !allProjectDependencies.includes(d));\n\n        if (difference.length > 0) {\n          await install(\n            tempDir,\n            difference.map((d) => ({ name: d })),\n            false\n          );\n        }\n      }\n\n      const generatorEntry = resolve(tempDir, generatorPackageJson.main);\n      const generator: Generator = require(generatorEntry).default;\n\n      return { generator, packageJson: generatorPackageJson };\n    }\n  } else {\n    const generatorEntry = resolve(cwd, generatorMeta.path);\n    const generator: Generator = require(generatorEntry).default;\n\n    return { generator, packageJson: {} };\n  }\n};\n","import { register, REGISTER_INSTANCE } from \"ts-node\";\n\nexport const setupTsTranspiler = () => {\n  if (!process[REGISTER_INSTANCE]) {\n    register({\n      compilerOptions: { module: \"commonjs\" },\n      transpileOnly: true,\n    });\n  }\n};\n","import got, { Response } from \"got\";\n\nconst parseJsonRes = (res: Response<string>) => JSON.parse(res.body);\n\nexport const gotJSON = (url: string) => got(url).then(parseJsonRes);\n\nexport const gotStream = (url: string) => got.stream(url);\n\nexport const isUrlValid = async (url: string) => {\n  return (await got(url).catch((e) => e)).statusCode === 200;\n};\n","export const GH_ROOT = \"https://github.com\";\nexport const API_ROOT = \"https://api.github.com/repos\";\nexport const RAW_ROOT = \"https://raw.githubusercontent.com\";\nexport const CODE_ROOT = \"https://codeload.github.com\";\n\nexport const cwd = process.cwd();\n","import tar from \"tar\";\nimport { Stream } from \"stream\";\nimport { promisify } from \"util\";\nimport { makeDir, removeDir } from \"@founding/devkit\";\nimport { gotStream } from \"./network\";\nimport { CODE_ROOT } from \"./config\";\n\nconst pipeline = promisify(Stream.pipeline);\n\nexport const cloneRepo = (\n  root: string,\n  // foundinghq/fx-template\n  repoFullName: string = \"foundinghq/fx-template\",\n  // main\n  defaultBranch: string = \"main\",\n  //packages/generator\n  subdirectory: string = \"\"\n) => {\n  removeDir(root);\n  makeDir(root);\n\n  const repoName = repoFullName.split(\"/\")[1];\n  const depth = subdirectory ? subdirectory.split(\"/\").length + 1 : 1;\n  const extractPath = subdirectory\n    ? [`${repoName}-${defaultBranch}/${subdirectory}`]\n    : [`${repoName}-${defaultBranch}`];\n\n  return pipeline(\n    gotStream(`${CODE_ROOT}/${repoFullName}/tar.gz/${defaultBranch}`),\n    tar.extract({ cwd: root, strip: depth }, extractPath)\n  );\n};\n","import { exec, execSync, Package } from \"@founding/devkit\";\n\nconst mapPackage = (p: Package) => {\n  if (!p.version) return p.name;\n  return `${p.name}@${p.version}`;\n};\n\nexport const install = async (\n  root: string,\n  dependencies: Package[] | null,\n  withStdio: boolean = true\n) => {\n  const originalCwd = process.cwd();\n  const useYarn = shouldUseYarn();\n  let command: string;\n  let args: string[];\n\n  process.chdir(root);\n\n  if (dependencies && dependencies.length) {\n    const deps = dependencies\n      .filter((p) => !p.isDevDep && !p.isExpoDep)\n      .map(mapPackage);\n    const devDeps = dependencies.filter((p) => p.isDevDep).map(mapPackage);\n    const expoDeps = dependencies.filter((p) => p.isExpoDep).map(mapPackage);\n\n    if (deps.length) {\n      command = useYarn ? \"yarnpkg\" : \"npm\";\n      args = useYarn\n        ? [\"add\", \"--exact\", \"--cwd\", root, ...deps]\n        : [\"install\", \"--save-exact\", \"--save\", ...deps];\n      await exec(command, args, withStdio);\n    }\n\n    if (devDeps.length) {\n      command = useYarn ? \"yarnpkg\" : \"npm\";\n      args = useYarn\n        ? [\"add\", \"--exact\", \"--cwd\", root, ...devDeps]\n        : [\"install\", \"--save-exact\", \"--save-dev\", ...devDeps];\n      await exec(command, args, withStdio);\n    }\n\n    if (expoDeps.length) {\n      command = \"expo\";\n      args = [\"install\", ...expoDeps];\n      await exec(command, args, withStdio);\n    }\n  } else {\n    command = useYarn ? \"yarnpkg\" : \"npm\";\n    args = useYarn ? [] : [\"install\"];\n    await exec(command, args, withStdio);\n  }\n\n  process.chdir(originalCwd);\n};\n\nexport const uninstall = async (\n  root: string,\n  dependencies: string[],\n  withStdio: boolean = true\n) => {\n  const originalCwd = process.cwd();\n  const useYarn = shouldUseYarn();\n  const command = useYarn ? \"yarnpkg\" : \"npm\";\n  const args = useYarn\n    ? [\"remove\", \"--cwd\", root, ...dependencies]\n    : [\"uninstall\", ...dependencies];\n\n  process.chdir(root);\n  await exec(command, args, withStdio);\n  process.chdir(originalCwd);\n};\n\nexport const shouldUseYarn = () => {\n  try {\n    const userAgent = process.env.npm_config_user_agent;\n    if (userAgent) return Boolean(userAgent && userAgent.startsWith(\"yarn\"));\n    if (execSync(\"yarn\", [\"--version\"]).status === 0) return true;\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n","import { resolve, extname } from \"path\";\nimport {\n  prompts,\n  logger,\n  transformEjs,\n  transformPrettier,\n  getFilePaths,\n  runTransforms,\n  writeFile,\n  throwHandledError,\n  Generator,\n  GeneratorMeta,\n  Context,\n} from \"@founding/devkit\";\nimport {\n  interpolate,\n  removeTemplateExtension,\n  createContext,\n  readAttributes,\n} from \"./context\";\nimport { install } from \"../utils/package\";\n\nconst executeSetupGenerator = async (\n  generator: Generator,\n  generatorOptions: Record<string, any> = {},\n  generatorMeta: GeneratorMeta\n) => {\n  const context = createContext();\n  context.generatorMeta = generatorMeta;\n\n  // Setup generator to assign props to the context\n  const props = await generator.setup(context, generatorOptions);\n  context.props = props;\n  context.p = props;\n\n  return context;\n};\n\nconst executeInstallDependencies = async (\n  generator: Generator,\n  context: Context,\n  dryRun: boolean\n) => {\n  logger.log(\"Installing dependencies:\");\n  const dependencies = await generator.install(context);\n\n  if (!dependencies || !dependencies.length) {\n    logger.success(\"No dependencies to install\");\n    logger.newLine();\n    return;\n  }\n\n  logger.list(dependencies.map((d) => logger.withCommand(d.name)));\n  if (dryRun) {\n    logger.newLine();\n    logger.warning(\"Dry run, skipping installation\");\n  } else {\n    const spinner = logger.spinner(\"Installing dependencies\");\n    await install(context.paths.root, dependencies, false);\n    spinner.succeed(\"Dependencies installed\");\n  }\n\n  logger.success(\"No dependencies to install\");\n  logger.newLine();\n};\n\nconst executeScaffolds = async (\n  generator: Generator,\n  context: Context,\n  generatorMeta: GeneratorMeta,\n  force: boolean\n) => {\n  logger.log(\"Generating feature source code:\");\n  const scaffoldPaths = await generator.scaffold(context);\n  const destFilePaths = [];\n  const skippedFiles = [];\n\n  if (!scaffoldPaths || !scaffoldPaths.length) {\n    logger.success(\"No files to generate\");\n    logger.newLine();\n    return;\n  }\n\n  for (const scaffoldPath of scaffoldPaths) {\n    const srcFilePaths = await getFilePaths(\n      resolve(generatorMeta.localRootPath, scaffoldPath.src)\n    );\n\n    for (const srcFilePath of srcFilePaths) {\n      // srcFilePath = /projects/founding/fx/generators/auth/templates/lib/users/api/accountService.ts.ejs\n      const path = extname(scaffoldPath.dest)\n        ? // If dest path is a file, copy the exact name\n          scaffoldPath.dest\n        : // If dest path is a directory, file could be nested\n          scaffoldPath.dest + // ./\n          removeTemplateExtension(srcFilePath)\n            .replace(resolve(generatorMeta.localRootPath) + \"/\", \"\") // /Users/kaiyuhsu/Documents/projects/founding/fx/generators/auth\n            .replace(scaffoldPath.src + \"/\", \"\"); // templates/next\n\n      const destFilePath = resolve(\n        context.paths.root,\n        interpolate(path, context)\n      );\n      const readableDestFilePath = destFilePath.replace(context.paths.root, \"\");\n\n      // Transform source file and read metadata\n      const { attributes, body } = readAttributes(\n        (await runTransforms({ src: srcFilePath }, [\n          transformEjs,\n          context,\n        ])) as string\n      );\n\n      const source = await transformPrettier(destFilePath)(body);\n\n      if (attributes.filter) {\n        try {\n          writeFile(destFilePath, source, {\n            force: force || attributes.force,\n            append: attributes.inject && attributes.append,\n          });\n          destFilePaths.push(readableDestFilePath);\n        } catch {\n          const res = await prompts({\n            type: \"confirm\",\n            name: \"force\",\n            message: `${readableDestFilePath} file already exists, would you like to overwrite it?`,\n            initial: true,\n          });\n\n          if (res.force) {\n            writeFile(destFilePath, source, { force: true });\n            destFilePaths.push(readableDestFilePath);\n          } else {\n            skippedFiles.push(readableDestFilePath);\n          }\n        }\n      }\n    }\n  }\n\n  destFilePaths.length &&\n    logger.list(destFilePaths.map((f) => `Generated ${logger.withCommand(f)}`));\n  skippedFiles.length &&\n    logger.list(\n      skippedFiles.map((f) => logger.withWarning(`Skipped generation of ${f}`))\n    );\n  logger.success(\"Source files generated\");\n  logger.newLine();\n};\n\nconst executeCodemods = async (generator: Generator, context: Context) => {\n  logger.log(\"Running codemods:\");\n  const filesModified = await generator.codemods(context);\n\n  if (!filesModified || !filesModified.length) {\n    logger.success(\"No codemods to run\");\n    logger.newLine();\n    return;\n  }\n\n  logger.list(\n    filesModified.map(\n      (f) => `Modified ${logger.withCommand(f.replace(context.paths.root, \"\"))}`\n    )\n  );\n  logger.success(\n    \"File modifications made in order to integrate directly into your source code\"\n  );\n  logger.newLine();\n};\n\nconst executeFinish = async (generator: Generator, context: Context) => {\n  await generator.finish(context);\n};\n\nexport const executeGenerator = async (\n  generatorMeta: GeneratorMeta,\n  generator: Generator,\n  generatorOptions: Record<string, any> = {},\n  cliOptions: Record<string, any> = {}\n) => {\n  const dryRun = cliOptions.dryRun || false;\n  const force = cliOptions.force || false;\n  const context = await executeSetupGenerator(\n    generator,\n    generatorOptions,\n    generatorMeta\n  );\n\n  try {\n    await executeInstallDependencies(generator, context, dryRun);\n    await executeScaffolds(generator, context, generatorMeta, force);\n    await executeCodemods(generator, context);\n  } catch (error) {\n    throwHandledError({\n      command: \"executeGenerator\",\n      message: `Error running execution step`,\n      error,\n    });\n  }\n\n  await executeFinish(generator, context);\n};\n","import fm from \"front-matter\";\nimport {\n  Context,\n  Frameworks,\n  Language,\n  Theme,\n  readJson,\n  fileExists,\n} from \"@founding/devkit\";\nimport { resolve } from \"path\";\nimport { cwd } from \"../utils/config\";\n\nconst inflection = require(\"inflection\");\nconst changeCase = require(\"change-case\");\n\nconst helpers = {\n  pluralizedCamelCase: (s: string) =>\n    changeCase.camelCase(inflection.pluralize(s)),\n  capitalize: (s: string) => s.charAt(0).toUpperCase() + s.slice(1),\n  inflection,\n  changeCase,\n};\n\nexport const createContext = () => {\n  // Context is currently hardcoded but should be configurable with\n  // `fx.config.js`\n  const context: Context = {\n    props: {},\n    paths: {\n      root: cwd,\n      env: resolve(cwd, \".env\"),\n      envExample: resolve(cwd, \".env.example\"),\n      fxConfig: resolve(cwd, \"fx.config.js\"),\n      tsConfig: resolve(cwd, \"tsconfig.json\"),\n      packageJson: resolve(cwd, \"package.json\"),\n      scheme: resolve(cwd, \"prisma/schema.prisma\"),\n      lib: resolve(cwd, \"lib\"),\n      libCore: resolve(cwd, \"lib/core\"),\n      mobile: resolve(cwd, \"expo\"),\n      appJson: resolve(cwd, \"app.json\"),\n      pages: resolve(cwd, \"pages\"),\n      api: resolve(cwd, \"pages/api\"),\n    },\n    config: {\n      frameworks: getFrameworks(),\n      language: getLanguage(),\n      theme: getTheme(),\n    },\n    helpers,\n    // alias\n    h: helpers,\n    p: {},\n  };\n\n  return context;\n};\n\nexport const getFrameworks = () => {\n  const frameworks: Frameworks[] = [];\n  const packageJson = readJson(resolve(cwd, \"package.json\"));\n  if (packageJson[\"dependencies\"][\"next\"]) frameworks.push(\"next\");\n  if (packageJson[\"dependencies\"][\"expo\"]) frameworks.push(\"expo\");\n  return frameworks;\n};\n\nexport const getLanguage = () => {\n  const language: Language = fileExists(resolve(cwd, \"tsconfig.json\"))\n    ? \"typescript\"\n    : \"javascript\";\n  return language;\n};\n\nexport const getTheme = () => {\n  const theme: Theme = \"pico\";\n  return theme;\n};\n\nexport const interpolate = (path: string, obj: Record<string, any> = {}) => {\n  const keys = Object.keys(obj);\n  const func = Function(...keys, \"return `\" + path + \"`;\");\n  return func(...keys.map((k) => obj[k]));\n};\n\nexport const removeTemplateExtension = (path: string) => {\n  if (path.split(\".\").length > 2 && path.endsWith(\".ejs\"))\n    return path.slice(0, -4);\n  return path;\n};\n\ntype FmAttributes = {\n  force?: boolean;\n  filter?: boolean;\n  inject?: boolean;\n  append?: boolean;\n  // Below are not implemented yet\n  prepend?: boolean;\n  before?: RegExp;\n  after?: RegExp;\n  skip_if?: RegExp;\n};\n\nexport const readAttributes = (source: string) => {\n  const defaultAttributes: FmAttributes = {\n    force: false,\n    filter: true,\n    inject: false,\n    append: false,\n  };\n  const { attributes, body } = fm<FmAttributes>(source);\n\n  return {\n    attributes: {\n      ...defaultAttributes,\n      ...attributes,\n    },\n    body,\n  };\n};\n","import { logger } from \"@founding/devkit\";\nimport { getOfficialGeneratorList } from \"../generator/list\";\n\nexport const list = async () => {\n  const spinner = logger.spinner(`Loading feature list`);\n  const featureList = await getOfficialGeneratorList();\n  spinner.stop();\n  logger.title(`Available FX features:`);\n  logger.list(featureList);\n  logger.newLine();\n  logger.log(`You can add features to your project with:`);\n  logger.log(logger.withCommand(`npx fx add <feature>`), 1);\n  logger.newLine();\n};\n","import { gotJSON } from \"../utils/network\";\nimport { API_ROOT } from \"../utils/config\";\n\ninterface Tree {\n  path: string;\n  mode: string;\n  type: string;\n  sha: string;\n  size: number;\n  url: string;\n}\n\ninterface GithubRepoAPITrees {\n  sha: string;\n  url: string;\n  tree: Tree[];\n  truncated: boolean;\n}\n\nexport const getOfficialGeneratorList = async () => {\n  // TODO: Allow you to pass a local directory to search for generators\n  const res = await Promise.all([\n    gotJSON(`${API_ROOT}/foundinghq/fx/git/trees/main?recursive=1`),\n    // Need to add access key here to get the list of generators\n    // gotJSON(\n    //   `${API_ROOT}/foundinghq/fx-generators/git/trees/main?recursive=1`\n    // ).catch(() => ({ tree: [] })),\n  ]);\n\n  const [publicGenerators, _privateGenerators]: GithubRepoAPITrees[] = res;\n  // const list = publicGenerators.tree.concat(privateGenerators.tree);\n  const list = publicGenerators.tree;\n\n  return list.reduce((generatorList: string[], item) => {\n    const filePath = item.path.split(\"/\");\n    const [directory, generatorName] = filePath;\n    if (\n      directory === \"generators\" &&\n      filePath.length === 2 &&\n      item.type === \"tree\" &&\n      !generatorName.includes(\"[dev]\")\n    ) {\n      generatorList.push(generatorName);\n    }\n    return generatorList;\n  }, []);\n};\n","import {\n  prompts,\n  GeneratorLocation,\n  removeDir,\n  logger,\n} from \"@founding/devkit\";\nimport { extractGenerator, normalizeGeneratorPath } from \"../generator/extract\";\nimport { executeGenerator } from \"../generator/execute\";\nimport { getOfficialGeneratorList } from \"../generator/list\";\nimport { parseArgs } from \"../utils/args\";\n\nexport const add = async (\n  feature: string = \"\",\n  args: string[] = [],\n  options: Record<string, any> = {}\n) => {\n  // Prompt user for the generator to add if they didn't specify one\n  if (!feature) {\n    const officialFeatures = await getOfficialGeneratorList();\n    const res = await prompts({\n      type: \"select\",\n      name: \"feature\",\n      message: \"What feature would you like to add?\",\n      initial: 0,\n      choices: officialFeatures.map((fname: string) => ({\n        title: fname,\n        value: fname,\n      })),\n    });\n\n    if (res.feature) {\n      feature = res.feature;\n      logger.newLine();\n    }\n  }\n\n  if (feature.length === 0) {\n    logger.newLine();\n    logger.log(\"Please specify the feature to add:\");\n    logger.log(\n      `${logger.withCommand(\"npx fx add\")} ${logger.withVariable(\"[feature]\")}`,\n      1\n    );\n    logger.newLine();\n    logger.log(\"For example:\");\n    logger.log(\n      `${logger.withCommand(\"npx fx add\")} ${logger.withVariable(\"auth\")}`,\n      1\n    );\n    logger.newLine();\n    logger.log(\n      `Run ${logger.withCommand(`npx fx add --help`)} to see all options.`\n    );\n    process.exit(1);\n  }\n\n  /**\n   *  Parse additional arguments from the command line:\n   * `fx add example --dry-run scope=a lame --test`\n   * => { scope: 'a', lame: true }\n   **/\n  const generatorOptions = parseArgs(args);\n  const generatorMeta = normalizeGeneratorPath(feature);\n\n  /**\n   * Extract the generator from either:\n   * - an official generator (e.g. auth)\n   * - GitHub repository (e.g. \"foundinghq/example-generator\")\n   * - Full url Github repository (e.g. \"https://github.com/foundinghq/example-generator\")\n   * - A local file path (e.g. \"./generators/example\")\n   *\n   * The extracted generator is placed in a temporary directory (if remote)\n   **/\n  const generatorName = logger.withVariable(feature);\n  const spinner = logger.spinner(`Installing ${generatorName} generator`);\n  const { generator } = await extractGenerator(generatorMeta);\n  spinner.succeed(`Generator installed`);\n\n  logger.success(`Running ${generatorName} generator`);\n  logger.newLine();\n  await executeGenerator(generatorMeta, generator, generatorOptions, options);\n\n  if (generatorMeta.location === GeneratorLocation.Remote) {\n    // Remove the temporary directory if cloned from a remote generator\n    removeDir(generatorMeta.localRootPath);\n  }\n\n  logger.success(\n    `${logger.withVariable(\"Success!\")} Your ${logger.withVariable(\n      feature\n    )} feature has been scaffolded.`\n  );\n  logger.newLine();\n};\n","export type RecipeCLIArgs = { [Key in string]?: string | true | string[] };\n\nexport const parseArgs = (args: string[]): { [key: string]: any } => {\n  return args\n    .filter((arg) => !arg.startsWith(\"--\"))\n    .reduce<RecipeCLIArgs>((acc, arg) => {\n      const [key, value] = arg.split(\"=\");\n      // Allow for duplicate keys, they will be merged as an array\n      if (acc[key]) {\n        if (Array.isArray(acc[key])) {\n          (acc[key] as string[]).push(value);\n        } else {\n          acc[key] = [acc[key] as string, value];\n        }\n      } else {\n        // If the key is not already set, set it as a json\n        acc[key] = value ? JSON.parse(`\"${value}\"`) : true;\n      }\n      return acc;\n    }, {});\n};\n","import {\n  prompts,\n  GeneratorLocation,\n  removeDir,\n  logger,\n  uninstall,\n} from \"@founding/devkit\";\nimport { getOfficialGeneratorList } from \"../generator/list\";\nimport { extractGenerator, normalizeGeneratorPath } from \"../generator/extract\";\n\nexport const remove = async (\n  feature: string = \"\",\n  options: Record<string, any> = {}\n) => {\n  if (!feature) {\n    const officialFeatures = await getOfficialGeneratorList();\n    const res = await prompts({\n      type: \"select\",\n      name: \"feature\",\n      message: \"What feature would you like to remove?\",\n      initial: 0,\n      choices: officialFeatures.map((fname: string) => ({\n        title: fname,\n        value: fname,\n      })),\n    });\n\n    if (res.feature && res.feature.length > 0) {\n      feature = res.feature;\n      logger.newLine();\n    }\n  }\n\n  if (feature.length === 0) {\n    logger.newLine();\n    logger.log(\"Please specify the feature to remove:\");\n    logger.log(\n      `${logger.withCommand(\"npx fx remove\")} ${logger.withVariable(\n        \"[feature]\"\n      )}`,\n      1\n    );\n    logger.newLine();\n    logger.log(\"For example:\");\n    logger.log(\n      `${logger.withCommand(\"npx fx remove\")} ${logger.withVariable(\"auth\")}`,\n      1\n    );\n    logger.newLine();\n    logger.log(\n      `Run ${logger.withCommand(`npx fx remove --help`)} to see all options.`\n    );\n    process.exit(1);\n  }\n\n  const spinner = logger.spinner(`Removing ${feature} feature from project`);\n  const dryRun = options.dryRun || false;\n  const generatorMeta = normalizeGeneratorPath(feature);\n\n  if (generatorMeta.location === GeneratorLocation.Remote) {\n    removeDir(generatorMeta.localRootPath);\n  }\n\n  const { generator } = await extractGenerator(generatorMeta);\n  const { dependencies, templates } = await generator.uninstall();\n\n  spinner.stop();\n\n  if (dependencies.length) {\n    try {\n      logger.log(\"Uninstalling dependencies:\");\n      logger.log(dependencies.map((d) => logger.withCaret(d)).join(\"\\n\"));\n      if (dryRun) {\n        logger.warning(\"Dry run: skipping uninstall\");\n      } else {\n        spinner.start(\"Uninstalling dependencies\");\n        await uninstall(process.cwd(), dependencies, false);\n        spinner.stop();\n      }\n      logger.newLine();\n    } catch (error: any) {\n      logger.error(\"Error uninstalling dependencies:\");\n      logger.error(error);\n    }\n  } else {\n    logger.success(`No dependencies to uninstall`);\n    logger.newLine();\n  }\n\n  if (templates.length) {\n    try {\n      logger.log(\"Removing feature source code:\");\n      logger.log(templates.map((t) => logger.withCaret(t)).join(\"\\n\"));\n      if (dryRun) {\n        logger.warning(\"Dry run: skipping source removal\");\n      } else {\n        spinner.start(\"Removing feature source code\");\n        for (const path of templates) {\n          removeDir(path);\n        }\n        spinner.stop();\n      }\n      logger.newLine();\n    } catch (error: any) {\n      logger.error(\"Error removing files:\");\n      logger.error(error);\n    }\n  } else {\n    logger.success(\"No source code to remove\");\n    logger.newLine();\n  }\n\n  if (generatorMeta.location === GeneratorLocation.Remote) {\n    removeDir(generatorMeta.localRootPath);\n  }\n\n  logger.warning(\n    `Removing features can be risky when features depend on one another. Changes and codemods ran on your source code have not been reverted. Please refer back to the commit where you installed a feature and manually check the diff.`\n  );\n  logger.newLine();\n  spinner.succeed(\n    `${logger.withVariable(\"Success!\")} Feature successfully removed`\n  );\n  logger.newLine();\n};\n","export const preset = async (presetName: string) => {\n  console.log(`Bootstrapping preset: ${presetName}`);\n};\n"],"names":[],"version":3,"file":"fx.js.map","sourceRoot":"../../../"}